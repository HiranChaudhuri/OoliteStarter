# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: build

on:
  workflow_dispatch:
  push:
  #  branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  semver:
    runs-on: ubuntu-latest
    outputs:
      GITVERSION_SEMVER: ${{ steps.output1.outputs.GITVERSION_SEMVER }}
      GITVERSION_ASSEMBLYSEMVER: ${{ steps.output1.outputs.GITVERSION_ASSEMBLYSEMVER }}
      GITVERSION_MAJORMINORPATCH: ${{ steps.output1.outputs.GITVERSION_MAJORMINORPATCH }}
      DEBIAN_PKGVERSION: ${{ steps.output1.outputs.DEBIAN_PKGVERSION }}
    steps:
    - name: Checkout project
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0
      with:
        versionSpec: '5.x'
      
    - name: Determine Version
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0
      
    - id: output1
      run: |
        set | grep GITVERSION | sort
        echo "GITVERSION_SEMVER=${GITVERSION_SEMVER}" >> "$GITHUB_OUTPUT"
        echo "GITVERSION_ASSEMBLYSEMVER=${GITVERSION_ASSEMBLYSEMVER}" >> "$GITHUB_OUTPUT"
        echo "GITVERSION_MAJORMINORPATCH=${GITVERSION_MAJORMINORPATCH}" >> "$GITHUB_OUTPUT"
        echo "DEBIAN_PKGVERSION=${GITVERSION_MAJOR}.${GITVERSION_MINOR}-${GITVERSION_PATCH}" >> "$GITHUB_OUTPUT"
        

  build:
    needs: [semver]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout project
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Build with Maven
      run: |
        mvn versions:set "-DnewVersion=${{ needs.semver.outputs.GITVERSION_SEMVER }}"
        mvn -B package -e --file pom.xml
        
#    - name: Check status
#      run: |
#        set
#        echo -n "Current directory: "
#        pwd
#        find

    - uses: actions/upload-artifact@v3
      with:
        name: OoliteStarter-generic
        path: target/OoliteStarter-${{ needs.semver.outputs.GITVERSION_SEMVER }}-generic.*

  package-linux:
    needs: [semver,build]
    runs-on: ubuntu-latest
    steps:
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Checkout project
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        path: oolitestarter

    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: OoliteStarter-generic
        path: artifacts

    - name: Check status 0
      run: |
        set
        echo -n "Current directory: "
        pwd
        find . -not -path "./oolitestarter/.git/*"
        
    - name: Extract project
      run: |
        tar xvfz artifacts/OoliteStarter-${{ needs.semver.outputs.GITVERSION_SEMVER }}-generic.tar.gz

    - name: Check status 1
      run: |
        set
        echo -n "Current directory: "
        pwd
        find . -not -path "./oolitestarter/.git/*"
        
    - name: Prepare AppImage for Ubuntu
      run: |
        jpackage \
          --type app-image \
          --app-version "${{ needs.semver.outputs.DEBIAN_PKGVERSION }}" \
          --copyright Copyright \
          --description "OoliteStarter ${{ needs.semver.outputs.GITVERSION_SEMVER }}" \
          --name "OoliteStarter" \
          --dest target/appimage \
          --temp target/oolite-starter-tmp \
          --vendor "hiran" \
          --verbose \
          --icon oolitestarter/src/main/resources/oolite_logo.png \
          --input OoliteStarter-${{ needs.semver.outputs.GITVERSION_SEMVER }}/dist \
          --main-jar OoliteStarter-${{ needs.semver.outputs.GITVERSION_SEMVER }}.jar \
          --main-class oolite.starter.MainFrame \
          --java-options '-splash:$APPDIR/splash.png' \
          --resource-dir oolitestarter/src/jpackage/resources-linux \

    - name: Tweak AppImage
      run: |
        cp -v "oolitestarter/src/jpackage/resources-linux/OoliteStarter.desktop" "target/appimage/OoliteStarter/lib/oolitestarter-OoliteStarter.desktop"
        cp -v "oolitestarter/src/main/resources/images/OoliteStarter_Splashscreen_640x360.png" "target/appimage/OoliteStarter/lib/app/splash.png"

    - name: Check status 2
      run: |
        set
        echo -n "Current directory: "
        pwd
        find . -not -path "./oolitestarter/.git/*"

    - name: Finish AppImage for Ubuntu
      run: |
        jpackage \
          --verbose \
          --app-image target/appimage/OoliteStarter \
          --name "OoliteStarter" \
          --app-version "${{ needs.semver.outputs.DEBIAN_PKGVERSION }}" \
          --dest target \
          --license-file oolitestarter/LICENSE \
          --icon oolitestarter/src/main/resources/oolite_logo.png \
          --resource-dir oolitestarter/src/jpackage/resources-linux
          #--linux-shortcut \
          #--linux-menu-group Game \
          #--linux-app-category misc \

    - name: Check status 3
      run: |
        set
        echo -n "Current directory: "
        pwd
        find . -not -path "./oolitestarter/.git/*"

    - uses: actions/upload-artifact@v3
      with:
        name: OoliteStarter-Ubuntu
        path: ./target/oolitestarter*.deb

  package-windows:
    needs: [semver,build]
    runs-on: windows-latest
    steps:
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Checkout project
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        path: oolitestarter

    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: OoliteStarter-generic
        path: artifacts

    - name: Check status 0
      run: |
        get-childitem . -Recurse | where {!$_.PSIsContainer} | select-object FullName

    - name: Extract project
      run: |
        unzip artifacts\OoliteStarter-${{ needs.semver.outputs.GITVERSION_SEMVER }}-generic.zip

    - name: Check status 1
      run: |
        get-childitem . -Recurse | where {!$_.PSIsContainer} | select-object FullName

    - name: Prepare AppImage for Windows
      run: |
        jpackage --type app-image --app-version "${{ needs.semver.outputs.GITVERSION_ASSEMBLYSEMVER }}" --copyright Copyright --description "OoliteStarter ${{ needs.semver.outputs.GITVERSION_SEMVER }}" --name "OoliteStarter" --dest target/appimage --temp target/oolite-starter-tmp --vendor "hiran" --verbose --icon oolitestarter/src/main/resources/oolite_logo.ico --input OoliteStarter-${{ needs.semver.outputs.GITVERSION_SEMVER }}/dist --main-jar OoliteStarter-${{ needs.semver.outputs.GITVERSION_SEMVER }}.jar --main-class oolite.starter.MainFrame --java-options '-splash:$APPDIR/splash.png'
        # --resource-dir src/jpackage/resources
        copy oolitestarter\src\main\resources\images\OoliteStarter_Splashscreen_640x360.png target\appimage\OoliteStarter\app\splash.png

    - name: Check status 2
      run: |
        get-childitem . -Recurse | where {!$_.PSIsContainer} | select-object FullName

    - name: Finish AppImage for Windows
      run: |
        jpackage --verbose --app-image target/appimage/OoliteStarter --name "OoliteStarter ${{ needs.semver.outputs.GITVERSION_SEMVER }}" --dest target --win-shortcut --icon oolitestarter/src/main/resources/oolite_logo.ico --win-shortcut --win-menu --win-menu-group Oolite
        #--resource-dir src/jpackage/resources

    - name: Check status 3
      run: |
        get-childitem . -Recurse | where {!$_.PSIsContainer} | select-object FullName

    - uses: actions/upload-artifact@v3
      with:
        name: OoliteStarter-Windows
        path: ./target/*.exe

  package-macos:
    needs: [semver,build]
    runs-on: macos-latest

    steps:
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Checkout project
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        path: oolitestarter

    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: OoliteStarter-generic
        path: artifacts

    - name: Check status 1
      run: |
        set
        echo -n "Current directory: "
        pwd
        find . -not -path "./oolitestarter/.git/*"
        
    - name: Extract project
      run: |
        tar xvfz artifacts/OoliteStarter-${{ needs.semver.outputs.GITVERSION_SEMVER }}-generic.tar.gz

    - name: Check status 1
      run: |
        set
        echo -n "Current directory: "
        pwd
        find . -not -path "./oolitestarter/.git/*"
        
    - name: Prepare AppImage for MacOS
      run: |
        jpackage \
          --type app-image \
          --app-version "1.0.0" \
          --copyright Copyright \
          --description "OoliteStarter ${{ needs.semver.outputs.GITVERSION_SEMVER }}" \
          --name "OoliteStarter" --dest target/appimage \
          --temp target/oolite-starter-tmp --vendor "hiran" --verbose \
          --icon oolitestarter/src/main/resources/oolite_logo.png \
          --input OoliteStarter-${{ needs.semver.outputs.GITVERSION_SEMVER }}/dist \
          --main-jar OoliteStarter-${{ needs.semver.outputs.GITVERSION_SEMVER }}.jar \
          --main-class oolite.starter.MainFrame --mac-package-name "OoliteStarter" \
          --java-options '-splash:$APPDIR/splash.png' \
          --vendor hiran

        #  --mac-sign --mac-package-signing-prefix space.oolite.oolitestarter. \
        #  --mac-signing-key-user-name "HiranChaudhuri"
        # --resource-dir src/jpackage/resources
        # --app-version "${{ needs.semver.outputs.GITVERSION_MAJORMINORPATCH }}" \

    - name: Tweak AppImage
      run: |
        cp -v "oolitestarter/src/main/resources/images/OoliteStarter_Splashscreen_640x360.png" "target/appimage/OoliteStarter.app/Contents/app/splash.png"

    - name: Check status 2
      run: |
        set
        echo -n "Current directory: "
        pwd
        find . -not -path "./oolitestarter/.git/*"

    - name: Finish AppImage for MacOS
      run: |
        jpackage \
          --type dmg \
          --verbose \
          --app-version "1.0.0" \
          --app-image target/appimage/OoliteStarter.app \
          --name "OoliteStarter" \
          --dest target \
          --vendor hiran
        #--resource-dir src/jpackage/resources

    - name: Check status 3
      run: |
        set
        echo -n "Current directory: "
        pwd
        find . -not -path "./oolitestarter/.git/*"

    - name: Rename result
      run: |
        mv ./target/OoliteStarter-1.0.0.dmg ./target/OoliteStarter-${{ needs.semver.outputs.GITVERSION_SEMVER }}.dmg

    - name: Check status 4
      run: |
        set
        echo -n "Current directory: "
        pwd
        find . -not -path "./oolitestarter/.git/*"

    - uses: actions/upload-artifact@v3
      with:
        name: OoliteStarter-MacOS
        path: ./target/OoliteStarter*.dmg

  release:
    needs: [semver,package-linux,package-windows,package-macos]
    runs-on: ubuntu-latest

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        path: artifacts

    - name: Check status
      run: |
        set
        echo -n "Current directory: "
        pwd
        find . -not -path "./oolitestarter/.git/*"

    - name: Remove old prereleases
      if: github.ref != 'refs/heads/master'
      uses: s00d/delete-older-releases@0.2.1
      with:
        #repo: <owner>/<repoName> # defaults to current repo
        keep_latest: 5
        delete_tag_pattern: v\d+\.\d+\.\d+-.*
        delete_type: 'prerelease'
        #delete_branch: '${{ github.ref_name }}'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Prerelease
      if: github.ref != 'refs/heads/master'
      id: create_prerelease
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "v${{ needs.semver.outputs.GITVERSION_SEMVER }}"
        prerelease: true
        title: "OoliteStarter v${{ needs.semver.outputs.GITVERSION_SEMVER }}"
        files: |
          artifacts/OoliteStarter-generic/*.zip
          artifacts/OoliteStarter-generic/*.tar.gz
          artifacts/OoliteStarter-Ubuntu/*.deb
          artifacts/OoliteStarter-Windows/*.exe
          artifacts/OoliteStarter-MacOS/*.dmg
      
    - name: Remove old releases
      if: github.ref == 'refs/heads/master'
      uses: s00d/delete-older-releases@0.2.1
      with:
        #repo: <owner>/<repoName> # defaults to current repo
        keep_latest: 3
        delete_tag_pattern: v\d+\.\d+\.\d+
        delete_type: 'release'
        #delete_branch: 'main'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Create Release
      if: github.ref == 'refs/heads/master'
      id: create_release
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "v${{ needs.semver.outputs.GITVERSION_SEMVER }}"
        prerelease: false
        title: "OoliteStarter v${{ needs.semver.outputs.GITVERSION_SEMVER }}"
        files: |
          artifacts/OoliteStarter-generic/*.zip
          artifacts/OoliteStarter-generic/*.tar.gz
          artifacts/OoliteStarter-Ubuntu/*.deb
          artifacts/OoliteStarter-Windows/*.exe
          artifacts/OoliteStarter-MacOS/*.dmg

  testdmg:
    needs: [package-macos]
    runs-on: macos-latest

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: OoliteStarter-MacOS
        path: artifacts

    - name: Check status
      run: |
        set
        echo -n "Current directory: "
        pwd
        find . -not -path "./oolitestarter/.git/*"
        
    # inspired from https://macwrench.miraheze.org/wiki/Hdiutil
    - name: Verify/Install
      run: |
        set -x
        F=$(ls artifacts/*.dmg)
        
        echo "Help..."
        hdiutil verify -help
        hdiutil imageinfo -help
        hdiutil hfsanalyze -help
        hdiutil checksum -help
        hdiutil info -help
        hdiutil pmap -help
        
        echo "Verifying..."
        hdiutil verify -verbose "$F"
        hdiutil imageinfo -verbose "$F"
        hdiutil hfsanalyze -verbose "$F"
        hdiutil checksum -type SHA256 -verbose "$F"
        hdiutil info -verbose
        hdiutil pmap -verbose "$F"
