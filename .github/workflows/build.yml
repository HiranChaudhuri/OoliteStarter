# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: build

on:
  workflow_dispatch:
  push:
  #  branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout project
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0
      with:
        versionSpec: '5.x'
      
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Determine Version
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0

    - name: Build with Maven
      run: |
        mvn versions:set "-DnewVersion=${{ env.GITVERSION_SEMVER }}"
        mvn -B package -e --file pom.xml
        
#    - name: Check status
#      run: |
#        set
#        echo -n "Current directory: "
#        pwd
#        find

    - uses: actions/upload-artifact@v2
      with:
        name: OoliteStarter
        path: target/OoliteStarter-${{ env.GITVERSION_SEMVER }}-generic.*

    - name: Remove old prereleases
      if: github.ref != 'refs/heads/master'
      uses: s00d/delete-older-releases@0.2.1
      with:
        #repo: <owner>/<repoName> # defaults to current repo
        keep_latest: 5
        delete_tag_pattern: v\d+\.\d+\.\d+-.*
        delete_type: 'prerelease'
        target_branch: '${{ github.ref_name }}'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Prerelease
      if: github.ref != 'refs/heads/master'
      id: create_prerelease
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "v${{ env.GITVERSION_SEMVER }}"
        prerelease: true
        title: "OoliteStarter v${{ env.GITVERSION_SEMVER }}"
        files: |
          target/*.zip
          target/*.tar.gz
      
    - name: Remove old releases
      if: github.ref == 'refs/heads/master'
      uses: s00d/delete-older-releases@0.2.1
      with:
        #repo: <owner>/<repoName> # defaults to current repo
        keep_latest: 3
        delete_tag_pattern: v\d+\.\d+\.\d+
        delete_type: 'release'
        target_branch: 'main'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Create Release
      if: github.ref == 'refs/heads/master'
      id: create_release
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "v${{ env.GITVERSION_SEMVER }}"
        prerelease: false
        title: "OoliteStarter v${{ env.GITVERSION_SEMVER }}"
        files: |
          target/*.zip
          target/*.tar.gz

  package-linux:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Checkout project
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        path: artifacts
        
    - name: Prepare AppImage
      run: |
        jpackage --type app-image --app-version "0.0.1" --copyright Copyright --description "OoliteStarter" --name "OoliteStarter" --dest target/appimage --temp target/oolite-starter-tmp --vendor "hiran" --verbose --icon target/classes/org/oolite/hiran/nexus/ui/Communicator_Logo_Icon.png --input target/dist --main-jar OoliteStarter.jar --main-class oolite.starter.MainFrame --resource-dir src/jpackage/resources

    - name: Check status
      run: |
        set
        echo -n "Current directory: "
        pwd
        find
