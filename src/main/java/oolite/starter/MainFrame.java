/*
 */
package oolite.starter;

import java.io.File;
import java.io.IOException;
import java.time.Duration;
import java.time.Instant;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.UnsupportedLookAndFeelException;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.xpath.XPathExpressionException;
import oolite.starter.ui.ExpansionsPanel;
import oolite.starter.ui.InstallationsPanel;
import oolite.starter.ui.StartGamePanel;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.xml.sax.SAXException;

/**
 * This is the main entry point for Oolite.
 * 
 * @author hiran
 */
public class MainFrame extends javax.swing.JFrame {
    private static final Logger log = LogManager.getLogger();

    /**
     * Creates new form MainFrame.
     */
    public MainFrame() throws IOException, SAXException, ParserConfigurationException, XPathExpressionException {
        initComponents();
        setTitle(MainFrame.class.getPackage().getImplementationTitle() + " " + MainFrame.class.getPackage().getImplementationVersion());
        setIconImage(new ImageIcon(getClass().getResource("/oolite_logo.png")).getImage());

        Configuration configuration = null;
        File confFile = new File(System.getProperty("oolite.starter.configuration", System.getProperty("user.home") + "/.oolite-starter.conf"));
        if (confFile.exists()) {
            configuration = new Configuration(confFile);
        } else {
            String msg = String.format("Configuration file %s not found. Loading defaults.", confFile.getAbsolutePath());
            log.warn(msg);
            JOptionPane.showMessageDialog(null, msg);
            configuration = new Configuration();
        }

        Oolite oolite = new Oolite();
        oolite.setConfiguration(configuration);
        
        StartGamePanel sgp = new StartGamePanel();
        sgp.setOolite(oolite);
        jTabbedPane1.add(sgp);

        ExpansionsPanel ep = new ExpansionsPanel();
        ep.setOolite(oolite);
        jTabbedPane1.add(ep);

        InstallationsPanel ip = new InstallationsPanel();
        ip.setConfiguration(configuration);
        jTabbedPane1.add(ip);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 600));
        getContentPane().add(jTabbedPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        log.info("{} {}  starting up...", MainFrame.class.getPackage().getImplementationTitle(), MainFrame.class.getPackage().getImplementationVersion());

        Runtime.getRuntime().addShutdownHook(new Thread("Shutdownhook") {
            @Override
            public void run() {
                log.info("{} {}  shutdown", MainFrame.class.getPackage().getImplementationTitle(), MainFrame.class.getPackage().getImplementationVersion());
            }
            
        });
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
            
            javax.swing.UIManager.setLookAndFeel(new com.formdev.flatlaf.FlatDarkLaf());
            
            
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
            log.info("Could not set look and feel", ex);
        }
        //</editor-fold>

        // TODO: parse command line
        // react to --version and --help
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                Instant i0 = Instant.now();

                MainFrame mf = new MainFrame();
                mf.pack();
                mf.setLocationRelativeTo(null);

                Instant i1 = Instant.now();

                Duration spent = Duration.between(i0, i1);
                long spentSeconds = spent.getSeconds();

                GithubVersionChecker gvc = new GithubVersionChecker();
                gvc.init();

                if (spentSeconds < 4) {
                    Thread.sleep((4 - spentSeconds) * 1000);
                }

                mf.setVisible(true);
                gvc.maybeAnnounceUpdate(mf);

            } catch (InterruptedException e) {
                log.fatal("Interrupted", e);
                Thread.currentThread().interrupt();
            } catch (Exception e) {
                log.fatal("Could not initialize UI", e);
                JOptionPane.showMessageDialog(null, e.getClass().getName() + ":\n" + e.getMessage(), "Fatal Error", JOptionPane.ERROR_MESSAGE);
                System.exit(1);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
