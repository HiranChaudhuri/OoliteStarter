/*
 */
package oolite.starter.ui2;

import oolite.starter.util.FilterAndSearchUtil;

/**
 *
 * @author hiran
 */
public class FilterAndSearch extends javax.swing.JPanel {

    /**
     * Creates new form FilterAndSearch.
     * 
     * Filter criteria:
     * - all expansions (no filtering)
     * - updatable
     * - problematic
     * 
     * Search:
     * - try as regexp
     * - literal search
     * 
     * Sort:
     * - by title (default)
     * - by Publish Date
     * - by Category
     * - by Tags
     * - by Author
     */
    public FilterAndSearch() {
        initComponents();
    }

    /**
     * Sets the filter mode.
     * 
     * @param fm the filter mode
     */
    public void setFilterMode(FilterAndSearchUtil.FilterMode fm) {
        if (fm == null) {
            throw new IllegalArgumentException();
        }
        switch(fm) {
            case NONE:
                rbFilterNone.setSelected(true);
                break;
            case PROBLEMATIC:
                rbProblematic.setSelected(true);
                break;
            case UPDATEABLE:
                rbUpdateable.setSelected(true);
                break;
            default:
                throw new IllegalArgumentException("Unknown FilterMode");
        }
    }
    
    /**
     * Returns the filter mode.
     * 
     * @return the filter mode
     */
    public FilterAndSearchUtil.FilterMode getFilterMode() {
        if (rbFilterNone.isSelected()) {
            return FilterAndSearchUtil.FilterMode.NONE;
        }
        if (rbProblematic.isSelected()) {
            return FilterAndSearchUtil.FilterMode.PROBLEMATIC;
        }
        if (rbUpdateable.isSelected()) {
            return FilterAndSearchUtil.FilterMode.UPDATEABLE;
        }
        throw new IllegalStateException();
    }
    
    /**
     * Sets the search string.
     * 
     * @param search the string
     */
    public void setSearchString(String search) {
        if (search == null) {
            tfSearch.setText("");
        }
        tfSearch.setText(search);
    }
    
    /**
     * Returns the search string.
     * 
     * @return the string
     */
    public String getSearchString() {
        return tfSearch.getText();
    }
    
    /**
     * Sets the sort mode.
     * 
     * @param sm the sort mode
     */
    public void setSortMode(FilterAndSearchUtil.SortMode sm) {
        if (sm == null) {
            throw new IllegalArgumentException();
        }
        switch (sm) {
            case BY_AUTHOR:
                rbAuthor.setSelected(true);
                break;
            case BY_CATEGORY:
                rbCategory.setSelected(true);
                break;
            case BY_PUBLISH_DATE:
                rbPublishDate.setSelected(true);
                break;
            case BY_TAGS:
                rbTags.setSelected(true);
                break;
            case BY_TITLE:
                rbTitle.setSelected(true);
                break;
            default:
                throw new IllegalArgumentException("Unknown SortMode");
        }
    }
    
    /**
     * Returns the chosen sort mode.
     * 
     * @return the sort mode
     */
    public FilterAndSearchUtil.SortMode getSortMode() {
        if (rbAuthor.isSelected()) {
            return FilterAndSearchUtil.SortMode.BY_AUTHOR;
        }
        if (rbCategory.isSelected()) {
            return FilterAndSearchUtil.SortMode.BY_CATEGORY;
        }
        if (rbPublishDate.isSelected()) {
            return FilterAndSearchUtil.SortMode.BY_PUBLISH_DATE;
        }
        if (rbTags.isSelected()) {
            return FilterAndSearchUtil.SortMode.BY_TAGS;
        }
        if (rbTitle.isSelected()) {
            return FilterAndSearchUtil.SortMode.BY_TITLE;
        }
        throw new IllegalStateException();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgFilter = new javax.swing.ButtonGroup();
        bgSort = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        rbFilterNone = new javax.swing.JRadioButton();
        rbUpdateable = new javax.swing.JRadioButton();
        rbProblematic = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        tfSearch = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        rbTitle = new javax.swing.JRadioButton();
        rbCategory = new javax.swing.JRadioButton();
        rbTags = new javax.swing.JRadioButton();
        rbAuthor = new javax.swing.JRadioButton();
        rbPublishDate = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Filter"));

        bgFilter.add(rbFilterNone);
        rbFilterNone.setText("all expansions");

        bgFilter.add(rbUpdateable);
        rbUpdateable.setText("updatable");

        bgFilter.add(rbProblematic);
        rbProblematic.setText("problematic");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbFilterNone)
                    .addComponent(rbUpdateable)
                    .addComponent(rbProblematic))
                .addContainerGap(75, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rbFilterNone)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbUpdateable)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbProblematic)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Search"));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tfSearch)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Sort by"));

        bgSort.add(rbTitle);
        rbTitle.setText("Title");

        bgSort.add(rbCategory);
        rbCategory.setText("Category");

        bgSort.add(rbTags);
        rbTags.setText("Tags");

        bgSort.add(rbAuthor);
        rbAuthor.setText("Author");

        bgSort.add(rbPublishDate);
        rbPublishDate.setText("Publish Date");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbTitle)
                    .addComponent(rbCategory)
                    .addComponent(rbTags)
                    .addComponent(rbAuthor)
                    .addComponent(rbPublishDate))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rbTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbCategory)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbTags)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbAuthor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbPublishDate)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/filter_list_FILL0_wght400_GRAD0_opsz48.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgFilter;
    private javax.swing.ButtonGroup bgSort;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton rbAuthor;
    private javax.swing.JRadioButton rbCategory;
    private javax.swing.JRadioButton rbFilterNone;
    private javax.swing.JRadioButton rbProblematic;
    private javax.swing.JRadioButton rbPublishDate;
    private javax.swing.JRadioButton rbTags;
    private javax.swing.JRadioButton rbTitle;
    private javax.swing.JRadioButton rbUpdateable;
    private javax.swing.JTextField tfSearch;
    // End of variables declaration//GEN-END:variables
}
